<?php
/**
 * Created by PhpStorm.
 * User: gaupoit
 * Date: 9/26/18
 * Time: 19:40
 */

class PdaCustomServer extends Wpup_UpdateServer {
	/**
	 * Override metedata.
	 *
	 * @param array $meta Metadata.
	 * @param Wpup_Request $request Request object.
	 *
	 * @return array|void
	 */
	protected function filterMetadata( $meta, $request ) {
		$meta = parent::filterMetadata( $meta, $request ); // TODO: Change the autogenerated stub.
		unset( $meta['download_url'] );

		return $meta;
	}

	/**
	 * Override action download
	 *
	 * @param Wpup_Request $request Request object.
	 */
//	protected function actionDownload( Wpup_Request $request ) {
//		$this->exitWithError( 'Downloads are disable', 403 );
//	}

	/**
	 * Override load package for
	 *
	 * @param Wpup_Request $request Request object.
	 */
	protected function loadPackageFor( $request ) {
		parent::loadPackageFor( $request );
	}

	/**
	 * Override authorization checking
	 *
	 * @param mixed $request Request object.
	 */
	protected function checkAuthorization( $request ) {
		// Comment by: thinhnp
		// Comment date: 25/01/2019
		// Reason: Need to improve it for high priority licenses.
//		try {
//			$this->logRequest( $request );
//			$license = $request->headers->get( 'Authorization' );
//			$curl    = curl_init();
//			$data    = array(
//				'license' => $license,
//			);
//			$config  = require( __DIR__ . '/../../config/index.php' );
//			$log_dir = dirname( __FILE ) . '/logs';
//			$logger  = new Katzgrau\KLogger\Logger( $log_dir );
//			curl_setopt_array( $curl, array(
//				CURLOPT_URL            => $config['api'],
//				CURLOPT_RETURNTRANSFER => true,
//				CURLOPT_ENCODING       => '',
//				CURLOPT_MAXREDIRS      => 10,
//				CURLOPT_TIMEOUT        => 30,
//				CURLOPT_HTTP_VERSION   => CURL_HTTP_VERSION_1_1,
//				CURLOPT_CUSTOMREQUEST  => 'POST',
//				CURLOPT_POSTFIELDS     => json_encode( $data ),
//				CURLOPT_HTTPHEADER     => array(
//					'Cache-Control: no-cache',
//					'Content-Type: application/json',
//					'X-API-KEY: ' . $config['key'],
//				),
//			) );
//			$response = curl_exec( $curl );
//			$err      = curl_error( $curl );
//			$info     = curl_getinfo( $curl );
//			curl_close( $curl );
//			if ( $err ) {
//				exit();
//			} else {
//				$logger->debug( $response );
//				$result = json_decode( $response );
//				if ( 200 !== $info['http_code'] || false === $result->message ) {
//					$logger->error( 'Response info: ' . json_encode( $info ) );
//					exit();
//				}
//			}
//		} catch ( Exception $ex ) {
//			$logger->error( wp_json_encode( $ex->getMessage() ) );
//		}
	}
}
